const unsortedFile = r"""
// Test Comment before file

// Test Comment for Library
library better_imports;
// Dart Imports
import 'dart:io';
/*
 * This is a multiline comment
 */
import 'package:better_imports/lib.dart';
import 'cfg_test.dart';
// Preceding comment one
// Preceding comment two
import 'package:dart_style/dart_style.dart' as averylongdartpackagetobeputonanotherline;
import '../res/sorter_fixtures.dart';
/// This is a documentation comment
/// This is a documentation comment
import 'package:test/test.dart';
part 'test.freezed.dart';
part 'test.g.dart';

// Test Comment after imports
void main() {
}
""";

const sortedFileWithComments = r"""
// Test Comment before file
// Test Comment for Library
library better_imports;

// Dart Imports
import 'dart:io';

// Package Imports
// Preceding comment one
// Preceding comment two
import 'package:dart_style/dart_style.dart'
    as averylongdartpackagetobeputonanotherline;

/// This is a documentation comment
/// This is a documentation comment
import 'package:test/test.dart';

// Project Imports
/*
 * This is a multiline comment
 */
import 'package:better_imports/lib.dart';

// Relative Project Imports
import 'cfg_test.dart';
import '../res/sorter_fixtures.dart';

part 'test.freezed.dart';
part 'test.g.dart';

// Test Comment after imports
void main() {
}
""";

const sortedFileWithCommentsRelative = r"""
// Test Comment before file
// Test Comment for Library
library better_imports;

// Dart Imports
import 'dart:io';

// Package Imports
// Preceding comment one
// Preceding comment two
import 'package:dart_style/dart_style.dart'
    as averylongdartpackagetobeputonanotherline;

/// This is a documentation comment
/// This is a documentation comment
import 'package:test/test.dart';

// Project Imports
/*
 * This is a multiline comment
 */
import '../lib/lib.dart';

// Relative Project Imports
import 'cfg_test.dart';
import '../res/sorter_fixtures.dart';

part 'test.freezed.dart';
part 'test.g.dart';

// Test Comment after imports
void main() {
}
""";

const sortedFileNoComments = r"""
// Test Comment before file
// Test Comment for Library
library better_imports;

import 'dart:io';

// Preceding comment one
// Preceding comment two
import 'package:dart_style/dart_style.dart'
    as averylongdartpackagetobeputonanotherline;

/// This is a documentation comment
/// This is a documentation comment
import 'package:test/test.dart';

/*
 * This is a multiline comment
 */
import 'package:better_imports/lib.dart';

import 'cfg_test.dart';
import '../res/sorter_fixtures.dart';

part 'test.freezed.dart';
part 'test.g.dart';

// Test Comment after imports
void main() {
}
""";

/// Issue #4 reproducer

const unsortedFileIssue4 = r"""
// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

// Test Comment after imports
void main() {
}
""";

const sortedFileIssue4 = r"""
// Flutter Imports
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

// Package Imports
// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;

// Test Comment after imports
void main() {
}
""";

/// Test for multi empty lines after directives
const unsortedFileMultiline = r"""
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:riverpod_annotation/riverpod_annotation.dart';


part 'main.g.dart';


// We create a "provider", which will store a value (here "Hello world").
// By using a provider, this allows us to mock/override the value exposed.
@riverpod
String helloWorld(Ref ref) {
  return 'Hello world';
}

void main() {
  runApp(
    // For widgets to be able to read providers, we need to wrap the entire
    // application in a "ProviderScope" widget.
    // This is where the state of our providers will be stored.
    ProviderScope(child: MyApp()),
  );
}
""";

const sortedFileMultiline = r"""
// Flutter Imports
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

// Package Imports
import 'package:riverpod_annotation/riverpod_annotation.dart';

part 'main.g.dart';


// We create a "provider", which will store a value (here "Hello world").
// By using a provider, this allows us to mock/override the value exposed.
@riverpod
String helloWorld(Ref ref) {
  return 'Hello world';
}

void main() {
  runApp(
    // For widgets to be able to read providers, we need to wrap the entire
    // application in a "ProviderScope" widget.
    // This is where the state of our providers will be stored.
    ProviderScope(child: MyApp()),
  );
}
""";

const unsortedFileLongDirectives = r"""
// Test Comment before file

// Test Comment for Library
library better_imports;
// Dart Imports
import 'dart:io';
/*
 * This is a multiline comment
 */
import 'package:better_imports/lib.dart';
import 'cfg_test.dart';
// Preceding comment one
// Preceding comment two
import 'package:dart_style/dart/dart/dart/dart/dart/dart/dart/dart/dart/dart_style.dart' as averylongdartpackagetobeputonanotherline;
import '../res/dart/dart/dart/dart/dart/dart/dart/dart/dart/dart/dart/dart/sorter_fixtures.dart';
/// This is a documentation comment
/// This is a documentation comment
import 'package:test/test.dart';

// Test Comment after imports
void main() {
}
""";

const sortedFileLongDirectives = r"""
// Test Comment before file
// Test Comment for Library
library better_imports;

// Dart Imports
import 'dart:io';

// Package Imports
// Preceding comment one
// Preceding comment two
import 'package:dart_style/dart/dart/dart/dart/dart/dart/dart/dart/dart/dart_style.dart'
    as averylongdartpackagetobeputonanotherline;

/// This is a documentation comment
/// This is a documentation comment
import 'package:test/test.dart';

// Project Imports
/*
 * This is a multiline comment
 */
import 'package:better_imports/lib.dart';

// Relative Project Imports
import 'cfg_test.dart';
import '../res/dart/dart/dart/dart/dart/dart/dart/dart/dart/dart/dart/dart/sorter_fixtures.dart';

// Test Comment after imports
void main() {
}
""";
